{
	"info": {
		"_postman_id": "simple-withdrawal-test",
		"name": "Simple Withdrawal Test",
		"description": "A simple collection to test withdrawal endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Withdrawal",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"accountId\": \"{{account_id}}\",\n  \"bankAccountId\": \"{{bank_account_id}}\",\n  \"amount\": 100.00\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{user_id}}/accounts/{{account_id}}/withdrawals",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{user_id}}",
						"accounts",
						"{{account_id}}",
						"withdrawals"
					]
				},
				"description": "Creates a new withdrawal"
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Test 1: Check if the response is successful",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"// Test 2: Get the response JSON",
							"const responseJson = pm.response.json();",
							"",
							"// Test 3: Save the withdrawal ID to environment variable",
							"if (responseJson && responseJson.id) {",
							"    pm.environment.set(\"withdrawal_id\", responseJson.id);",
							"    console.log(\"✅ Withdrawal ID saved:\", responseJson.id);",
							"    ",
							"    // Also save other useful data",
							"    pm.environment.set(\"withdrawal_user_id\", responseJson.userId);",
							"    pm.environment.set(\"withdrawal_account_id\", responseJson.accountId);",
							"    pm.environment.set(\"withdrawal_amount\", responseJson.amount);",
							"    pm.environment.set(\"withdrawal_status\", responseJson.status);",
							"} else {",
							"    console.log(\"❌ No withdrawal ID found in response\");",
							"}",
							"",
							"// Test 4: Validate response structure",
							"pm.test(\"Response has withdrawal data\", function () {",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('userId');",
							"    pm.expect(responseJson).to.have.property('accountId');",
							"    pm.expect(responseJson).to.have.property('bankAccountId');",
							"    pm.expect(responseJson).to.have.property('amount');",
							"    pm.expect(responseJson).to.have.property('status');",
							"    pm.expect(responseJson).to.have.property('created_at');",
							"});",
							"",
							"// Test 5: Validate withdrawal status",
							"pm.test(\"Withdrawal status is CREATED\", function () {",
							"    pm.expect(responseJson.status).to.eql(\"CREATED\");",
							"});",
							"",
							"// Test 6: Log the full response for debugging",
							"console.log(\"Full response:\", responseJson);"
						]
					}
				}
			]
		},
		{
			"name": "Get Withdrawal by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/users/{{user_id}}/accounts/{{account_id}}/withdrawals/{{withdrawal_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{user_id}}",
						"accounts",
						"{{account_id}}",
						"withdrawals",
						"{{withdrawal_id}}"
					]
				},
				"description": "Gets withdrawal by ID"
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Test 1: Check if the response is successful",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Test 2: Get the response JSON",
							"const responseJson = pm.response.json();",
							"",
							"// Test 3: Validate withdrawal data structure",
							"pm.test(\"Response has withdrawal data\", function () {",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson).to.have.property('userId');",
							"    pm.expect(responseJson).to.have.property('accountId');",
							"    pm.expect(responseJson).to.have.property('bankAccountId');",
							"    pm.expect(responseJson).to.have.property('amount');",
							"    pm.expect(responseJson).to.have.property('status');",
							"    pm.expect(responseJson).to.have.property('created_at');",
							"});",
							"",
							"// Test 4: Validate that the withdrawal ID matches the requested ID",
							"pm.test(\"Withdrawal ID matches request\", function () {",
							"    const requestedId = pm.request.url.path[pm.request.url.path.length - 1];",
							"    pm.expect(responseJson.id).to.eql(requestedId);",
							"});",
							"",
							"// Test 5: Log the withdrawal details",
							"console.log(\"Withdrawal Details:\", {",
							"    id: responseJson.id,",
							"    status: responseJson.status,",
							"    amount: responseJson.amount,",
							"    created_at: responseJson.created_at",
							"});"
						]
					}
				}
			]
		}
	]
}
