{
	"info": {
		"_postman_id": "private-plan-challenge-api-collection",
		"name": "Private Plan Challenge API",
		"description": "A comprehensive collection for testing the Private Plan Challenge API endpoints. This collection includes examples for all available API operations including account management, withdrawals, and webhooks.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "private-plan-challenge"
	},
	"item": [
		{
			"name": "Account Management",
			"item": [
				{
					"name": "Get Account by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}/accounts/{{account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}",
								"accounts",
								"{{account_id}}"
							]
						},
						"description": "Retrieves account details for a specific user and account ID. Returns account information including cash balance, available withdrawal amount, deposits, and withdrawals with their step history and notifications."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/users/19ca04c6-9c96-40f4-b7db-a55394b5a58d/accounts/e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"19ca04c6-9c96-40f4-b7db-a55394b5a58d",
										"accounts",
										"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472\",\n  \"cashAvailableForWithdrawal\": 4183.94,\n  \"cashBalance\": 5449.54,\n  \"deposits\": [\n    {\n      \"id\": \"55df886b-0684-454a-aaeb-b95c391ca243\",\n      \"amount\": 2841.98,\n      \"userCredited\": true,\n      \"created_at\": \"2025-09-18T23:15:03Z\",\n      \"updated_at\": \"2025-09-18T23:15:03Z\"\n    },\n    {\n      \"id\": \"3760d14d-17bf-4deb-a3eb-8b2438ec25df\",\n      \"amount\": 2405.38,\n      \"userCredited\": true,\n      \"created_at\": \"2025-09-20T23:15:03Z\",\n      \"updated_at\": \"2025-09-20T23:15:03Z\"\n    }\n  ],\n  \"withdrawals\": [\n    {\n      \"id\": \"350408b1-822c-474b-9f26-24d17098ba07\",\n      \"amount\": 492.48,\n      \"step\": \"COMPLETED\",\n      \"stepHistory\": [\n        {\n          \"step\": \"CREATED\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-03T23:15:03Z\"\n        },\n        {\n          \"step\": \"DEBITING\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-03T23:15:05Z\"\n        },\n        {\n          \"step\": \"SENDING_TO_BANK\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-03T23:15:10Z\"\n        },\n        {\n          \"step\": \"RECEIVED_BANK_RESPONSE\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-03T23:15:15Z\"\n        },\n        {\n          \"step\": \"COMPLETED\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-03T23:15:20Z\"\n        }\n      ],\n      \"notifications\": [\n        {\n          \"type\": \"email\",\n          \"message\": \"Your withdrawal of $492.48 has been completed successfully\",\n          \"sentAt\": \"2025-10-03T23:15:20Z\"\n        }\n      ],\n      \"created_at\": \"2025-10-03T23:15:03Z\",\n      \"updated_at\": \"2025-10-03T23:15:20Z\"\n    },\n    {\n      \"id\": \"14ea502f-c4ef-4dbb-a893-debf0d8679e7\",\n      \"amount\": 611.15,\n      \"step\": \"COMPLETED\",\n      \"stepHistory\": [\n        {\n          \"step\": \"CREATED\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-05T23:15:03Z\"\n        },\n        {\n          \"step\": \"DEBITING\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-05T23:15:05Z\"\n        },\n        {\n          \"step\": \"SENDING_TO_BANK\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-05T23:15:10Z\"\n        },\n        {\n          \"step\": \"RECEIVED_BANK_RESPONSE\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-05T23:15:15Z\"\n        },\n        {\n          \"step\": \"COMPLETED\",\n          \"stepRetrialCount\": 0,\n          \"at\": \"2025-10-05T23:15:20Z\"\n        }\n      ],\n      \"notifications\": [\n        {\n          \"type\": \"email\",\n          \"message\": \"Your withdrawal of $611.15 has been completed successfully\",\n          \"sentAt\": \"2025-10-05T23:15:20Z\"\n        }\n      ],\n      \"created_at\": \"2025-10-05T23:15:03Z\",\n      \"updated_at\": \"2025-10-05T23:15:20Z\"\n    }\n  ],\n  \"created_at\": \"2025-08-17T23:15:03Z\",\n  \"updated_at\": \"2025-10-11T23:15:03Z\"\n}"
						},
						{
							"name": "Account Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/users/invalid_user/accounts/invalid_account",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"invalid_user",
										"accounts",
										"invalid_account"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"statusCode\": 404,\n  \"message\": \"Account invalid_account not found for user invalid_user\",\n  \"error\": \"Not Found\",\n  \"timestamp\": \"2023-10-18T14:30:00.000Z\",\n  \"path\": \"/api/v1/users/invalid_user/accounts/invalid_account\"\n}"
						}
					]
				}
			],
			"description": "Operations related to account management including retrieving account information."
		},
		{
			"name": "Withdrawal Operations",
			"item": [
				{
					"name": "Create Withdrawal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"accountId\": \"{{account_id}}\",\n  \"bankAccountId\": \"{{bank_account_id}}\",\n  \"amount\": 500.00\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}/accounts/{{account_id}}/withdrawals",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}",
								"accounts",
								"{{account_id}}",
								"withdrawals"
							]
						},
						"description": "Creates a new withdrawal from the specified account to the bank account. Initiates the withdrawal process and returns the withdrawal details."
					},
					"response": [
						{
							"name": "Withdrawal Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"19ca04c6-9c96-40f4-b7db-a55394b5a58d\",\n  \"accountId\": \"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472\",\n  \"bankAccountId\": \"b61648ba-0323-4e9a-8046-413c88de1245\",\n  \"amount\": 500.00\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/v1/users/19ca04c6-9c96-40f4-b7db-a55394b5a58d/accounts/e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472/withdrawals",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"19ca04c6-9c96-40f4-b7db-a55394b5a58d",
										"accounts",
										"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472",
										"withdrawals"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"350408b1-822c-474b-9f26-24d17098ba07\",\n  \"userId\": \"19ca04c6-9c96-40f4-b7db-a55394b5a58d\",\n  \"accountId\": \"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472\",\n  \"bankAccountId\": \"b61648ba-0323-4e9a-8046-413c88de1245\",\n  \"amount\": 500.00,\n  \"status\": \"CREATED\",\n  \"created_at\": \"2025-10-03T23:15:03Z\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"19ca04c6-9c96-40f4-b7db-a55394b5a58d\",\n  \"accountId\": \"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472\",\n  \"bankAccountId\": \"b61648ba-0323-4e9a-8046-413c88de1245\",\n  \"amount\": 0.001\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/v1/users/19ca04c6-9c96-40f4-b7db-a55394b5a58d/accounts/e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472/withdrawals",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"19ca04c6-9c96-40f4-b7db-a55394b5a58d",
										"accounts",
										"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472",
										"withdrawals"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"statusCode\": 400,\n  \"message\": [\n    \"amount must not be less than 0.01\"\n  ],\n  \"error\": \"Bad Request\",\n  \"timestamp\": \"2025-10-18T14:30:00.000Z\",\n  \"path\": \"/api/v1/users/19ca04c6-9c96-40f4-b7db-a55394b5a58d/accounts/e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472/withdrawals\"\n}"
						}
					],
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Check if the response is successful",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Get the response JSON",
									"const responseJson = pm.response.json();",
									"",
									"// Save the withdrawal ID to environment variable",
									"if (responseJson && responseJson.id) {",
									"    pm.environment.set(\"withdrawal_id\", responseJson.id);",
									"    console.log(\"✅ Withdrawal ID saved:\", responseJson.id);",
									"    ",
									"    // Also save other useful data",
									"    pm.environment.set(\"withdrawal_user_id\", responseJson.userId);",
									"    pm.environment.set(\"withdrawal_account_id\", responseJson.accountId);",
									"    pm.environment.set(\"withdrawal_amount\", responseJson.amount);",
									"    pm.environment.set(\"withdrawal_status\", responseJson.status);",
									"} else {",
									"    console.log(\"❌ No withdrawal ID found in response\");",
									"}",
									"",
									"// Additional validation tests",
									"pm.test(\"Response has withdrawal data\", function () {",
									"    pm.expect(responseJson).to.have.property('id');",
									"    pm.expect(responseJson).to.have.property('userId');",
									"    pm.expect(responseJson).to.have.property('accountId');",
									"    pm.expect(responseJson).to.have.property('bankAccountId');",
									"    pm.expect(responseJson).to.have.property('amount');",
									"    pm.expect(responseJson).to.have.property('status');",
									"    pm.expect(responseJson).to.have.property('created_at');",
									"});",
									"",
									"pm.test(\"Withdrawal status is CREATED\", function () {",
									"    pm.expect(responseJson.status).to.eql(\"CREATED\");",
									"});",
									"",
									"// Log the full response for debugging",
									"console.log(\"Full response:\", responseJson);"
								]
							}
						}
					]
				},
				{
					"name": "Get Withdrawal by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}/accounts/{{account_id}}/withdrawals/{{withdrawal_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}",
								"accounts",
								"{{account_id}}",
								"withdrawals",
								"{{withdrawal_id}}"
							]
						},
						"description": "Retrieves withdrawal details by ID. Returns the current status and details of a specific withdrawal."
					},
					"response": [
						{
							"name": "Withdrawal Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/users/19ca04c6-9c96-40f4-b7db-a55394b5a58d/accounts/e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472/withdrawals/350408b1-822c-474b-9f26-24d17098ba07",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"19ca04c6-9c96-40f4-b7db-a55394b5a58d",
										"accounts",
										"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472",
										"withdrawals",
										"350408b1-822c-474b-9f26-24d17098ba07"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"350408b1-822c-474b-9f26-24d17098ba07\",\n  \"userId\": \"19ca04c6-9c96-40f4-b7db-a55394b5a58d\",\n  \"accountId\": \"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472\",\n  \"bankAccountId\": \"b61648ba-0323-4e9a-8046-413c88de1245\",\n  \"amount\": 492.48,\n  \"status\": \"COMPLETED\",\n  \"created_at\": \"2025-10-03T23:15:03Z\"\n}"
						},
						{
							"name": "Withdrawal Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/users/user_123456789/accounts/acc_123456789/withdrawals/invalid_withdrawal",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"user_123456789",
										"accounts",
										"acc_123456789",
										"withdrawals",
										"invalid_withdrawal"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"statusCode\": 404,\n  \"message\": \"Withdrawal invalid_withdrawal not found for user user_123456789 and account acc_123456789\",\n  \"error\": \"Not Found\",\n  \"timestamp\": \"2023-10-18T14:30:00.000Z\",\n  \"path\": \"/api/v1/users/user_123456789/accounts/acc_123456789/withdrawals/invalid_withdrawal\"\n}"
						}
					],
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Check if the response is successful",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Get the response JSON",
									"const responseJson = pm.response.json();",
									"",
									"// Validate withdrawal data structure",
									"pm.test(\"Response has withdrawal data\", function () {",
									"    pm.expect(responseJson).to.have.property('id');",
									"    pm.expect(responseJson).to.have.property('userId');",
									"    pm.expect(responseJson).to.have.property('accountId');",
									"    pm.expect(responseJson).to.have.property('bankAccountId');",
									"    pm.expect(responseJson).to.have.property('amount');",
									"    pm.expect(responseJson).to.have.property('status');",
									"    pm.expect(responseJson).to.have.property('created_at');",
									"    pm.expect(responseJson).to.have.property('stepHistory');",
									"    pm.expect(responseJson).to.have.property('notifications');",
									"});",
									"",
									"// Validate that the withdrawal ID matches the requested ID",
									"pm.test(\"Withdrawal ID matches request\", function () {",
									"    const requestedId = pm.request.url.path[pm.request.url.path.length - 1];",
									"    pm.expect(responseJson.id).to.eql(requestedId);",
									"});",
									"",
									"// Log the withdrawal details",
									"console.log(\"Withdrawal Details:\", {",
									"    id: responseJson.id,",
									"    status: responseJson.status,",
									"    amount: responseJson.amount,",
									"    created_at: responseJson.created_at,",
									"    stepHistory: responseJson.stepHistory,",
									"    notifications: responseJson.notifications",
									"});"
								]
							}
						}
					]
				}
			],
			"description": "Operations related to withdrawal management including creating and retrieving withdrawal information."
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Bradesco Bank Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"accountId\": \"{{account_id}}\",\n  \"withdrawalId\": \"{{withdrawal_id}}\",\n  \"success\": true,\n  \"error\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/bradesco",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bradesco"
							]
						},
						"description": "Receives bank transfer notifications from Bradesco. This webhook is called by Bradesco to notify about the status of bank transfers."
					},
					"response": [
						{
							"name": "Webhook Processed Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"accountId\": \"{{account_id}}\",\n  \"withdrawalId\": \"{{withdrawal_id}}\",\n  \"success\": true,\n  \"error\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/bradesco",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"bradesco"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Webhook processed successfully\"\n}"
						},
						{
							"name": "Invalid Webhook Data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invalidField\": \"invalid_value\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/bradesco",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"bradesco"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"statusCode\": 400,\n  \"message\": \"Invalid webhook data\",\n  \"error\": \"Bad Request\",\n  \"timestamp\": \"2023-10-18T14:30:00.000Z\",\n  \"path\": \"/bradesco\"\n}"
						}
					]
				}
			],
			"description": "Webhook endpoints for receiving notifications from external services like banks."
		},
		{
			"name": "Job Management",
			"item": [
				{
					"name": "Trigger Deposit Release Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2025-10-21\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/jobs/deposit-release",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"deposit-release"
							]
						},
						"description": "Manually trigger the deposit release job for a specific date. This endpoint is useful for testing the daily job functionality."
					},
					"response": [
						{
							"name": "Job Triggered Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"date\": \"2025-10-21\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/v1/jobs/deposit-release",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"jobs",
										"deposit-release"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Deposit release job completed successfully\",\n  \"date\": \"2025-10-21\"\n}"
						}
					]
				},
				{
					"name": "Setup Test Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/jobs/setup-test-data",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"setup-test-data"
							]
						},
						"description": "Setup test deposits for testing the daily job functionality. This creates sample deposits with different release dates."
					},
					"response": [
						{
							"name": "Test Data Setup Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/jobs/setup-test-data",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"jobs",
										"setup-test-data"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Test data setup completed successfully\",\n  \"depositsCount\": 3\n}"
						}
					]
				},
				{
					"name": "Get Test Deposits",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/jobs/test-deposits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"test-deposits"
							]
						},
						"description": "Retrieve all test deposits with their current status. Shows deposits with userId, accountId, and release dates."
					},
					"response": [
						{
							"name": "Test Deposits Retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/jobs/test-deposits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"jobs",
										"test-deposits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"deposit_1\",\n    \"userId\": \"19ca04c6-9c96-40f4-b7db-a55394b5a58d\",\n    \"accountId\": \"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472\",\n    \"amount\": 1000,\n    \"release_at\": \"2025-10-21T16:43:37.311Z\",\n    \"userCredited\": false,\n    \"destinationAccountId\": \"e05a5f81-8e1c-4bb1-aa01-bb9dfc8d8472\",\n    \"comment\": \"Test deposit for today\"\n  }\n]"
						}
					]
				}
			],
			"description": "Job management endpoints for testing and managing scheduled tasks like deposit release processing."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "user_123456789",
			"type": "string"
		},
		{
			"key": "account_id",
			"value": "acc_123456789",
			"type": "string"
		},
		{
			"key": "bank_account_id",
			"value": "bank_987654321",
			"type": "string"
		},
		{
			"key": "withdrawal_id",
			"value": "withdrawal_123456789",
			"type": "string"
		}
	]
}
